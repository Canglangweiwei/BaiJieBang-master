apply plugin: 'com.android.application'
apply plugin: 'android-apt'// Dagger2配置

// 加载签名配置的文件
Properties props = new Properties()
props.load(project.rootProject.file('signing.properties').newDataInputStream())

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.water.helper"
        minSdkVersion 11
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a', 'x86', 'x86_64', 'mips', 'mips64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "bc8fc120b33fd9884c95da72", // JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", // 暂时填写默认值即可.
        ]
    }

    // 配置签名信息
    signingConfigs {
        release {
            // 签名文件的路径
            storeFile file(props['KEYSTORE_FILE'])
            // 签名密码
            storePassword props['KEYSTORE_PASSWORD']
            // 签名的别名
            keyAlias props['KEY_ALIAS']
            // 密码
            keyPassword props['KEY_PASSWORD']
        }
        debug {
            // 签名文件的路径
            storeFile file(props['KEYSTORE_FILE'])
            // 签名密码
            storePassword props['KEYSTORE_PASSWORD']
            // 签名的别名
            keyAlias props['KEY_ALIAS']
            // 密码
            keyPassword props['KEY_PASSWORD']
        }
    }

    buildTypes {
        release {
            // 是否混淆
            minifyEnabled false
            // 是否移除无用资源
            zipAlignEnabled true
            signingConfig signingConfigs.release
            // 混淆的配置文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }

        debug {
            // 是否混淆
            minifyEnabled false
            // 是否移除无用资源
            zipAlignEnabled true
            signingConfig signingConfigs.debug
            // 混淆的配置文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    sourceSets {
        main {
            // 设置Jni so文件路径 如果有jniLibs目录就不需要设置，好像手动创建的 jniLibs目录无效
            jniLibs.srcDirs = ['libs']
            jni.srcDirs = []
        }
    }

    dexOptions {
        jumboMode = true
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':library:jpush')
    // 对话框工具包
    compile project(':library:xrecyclerview')
    // 万能适配器和recyclerview
    compile project(':library:selectordialog')
    // 对话框工具包
    // Dagger2
    provided 'javax.annotation:javax.annotation-api:1.2'
    compile 'com.google.dagger:dagger:2.0.2'
    apt 'com.google.dagger:dagger-compiler:2.0.2'
    // okhttp3
    compile 'com.squareup:otto:1.3.8'
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    // 网络加载框架retrofit2
    compile 'com.squareup.retrofit2:retrofit:2.0.1'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.1'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    // rx
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'io.reactivex:rxjava:1.1.5'

    // 打印机相关
    compile 'com.github.promeg:tinypinyin:1.0.0'
    compile files('libs/AndroidPrinterSDK3.0.jar')
}
